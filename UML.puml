@startuml
!theme vibrant
skinparam classAttributeIconSize 0
skinparam classArrowColor #A9A9A9
skinparam arrowColor #A9A9A9
skinparam classBorderColor #A9A9A9
skinparam classBackgroundColor #F5F5F5

package "UI" {
    class UIDebugger {
        + RectTransform contentRect
        + RectTransform dialogueTextRect
    }

    class Title {
        + string gameSceneName
        + void OnClickStart()
        + void OnClickQuit()
    }

    class NPCInteraction {
        + Dialogue dialogue
        + GameObject dialoguePanel
        + TextMeshProUGUI dialogueText
        + TextMeshProUGUI interactionText
        + GameObject choiceButtonPrefab
        + Transform choicesLayout
        + float typingSpeed
        - int index
        - bool isPlayerInRange
        - bool isTalking
        + void StartDialogue()
        + void ContinueDialogue()
        + void EndDialogue()
        - IEnumerator TypeSentence()
        - void ShowChoices()
        - void OnChoiceSelected(Choice choice)
    }

    class GameOverScript {
        + GameObject gameOverCanvas
        + GameObject otherUI
        + void EndingFunc()
        + void RestartGame()
        + void QuitGame()
    }

    class Timer {
        + TextMeshProUGUI timerText
        + float remainingTime
        + GameOverScript gameOverScript
        - void TimeCountdown()
        - IEnumerator GameOver()
    }
}

package "Player" {
    class PlayerReset {
        + float minY
        + string objTag
        + Material changeMaterial
        + bool SavePoint
        + bool PathColorizer
        - Vector3 startPos
        - SimpleMove moveScript
        - CharacterController controller
        - Vector3 tempPos
        - void ResetToStart()
        - void SavePointUpdate(ControllerColliderHit hit)
        - void PastPathColorizer(ControllerColliderHit hit)
    }

    class SimpleMove {
        + Vector3 dir
        + float speed
        + float jumpPower
        + float gravity
        + float yVelocity
        - CharacterController controller
        - bool NeverCanJump
        - bool PortalOn
        + void somethingFunction()
        + void ApplyPortal()
    }

    class ViewToggle {
        + GameObject firstPersonCam
        + GameObject thirdPersonCam
    }
}

package "Platform" {
    class DialogueTrigger {
        + DialogueManager scriptManager
        + bool triggerOnce
        - bool hasTriggered
    }

    class PanelHiding {
        + float delayBeforeHide
        + float hideDuration
        + void ApplyPanelHide()
        - IEnumerator HideAndShowPanel(GameObject panel)
    }

    class PlatformFunc {
    }

    package "level2" {
        class TagColorizer1 {
            + Color correctColor
            + Color wrongColor
            + float duration
            - Coroutine effectCoroutine
            + void ColorPanels()
            - IEnumerator HighlightRoutine()
        }
    }
}

package "Item" {
    class DogMoveScript {
        + GameObject platformParent
        + GameObject playerObject
        + float jumpHeight
        + float jumpDuration
        + float groundCheckDistance
        + LayerMask groundLayer
        - bool isDogMoving
        - GameObject currentPlatform
        - Vector3 correct01Position
        - IEnumerator DogMove()
        + void ApplyDog()
        - int ExtractNumberFromName(string name)
        - GameObject FindPlatformByName(string platformName)
    }

    class FogTrigger {
        + GameObject playerObject
        + Color FogColor
        + float FogDensity
        + float transitionDuration
        - float originExposure
        - IEnumerator FogMakingAnimation()
    }



    class ItemInteraction {
        + Image itemImageUI
        + Sprite collectedItemSprite
        + bool itemHave
        + UnityEvent OnItemCollected
        - Renderer objectRenderer
        - Collider itemCollider
        - void CollectItem()
        - void UseItem()
    }

    class ItemTrigger {
        + UnityEvent OnItemCollected
        + bool ObjectDisable
        + bool FogDisable
        + GameObject ExternalObject
        + float DisableDuration
        - Renderer objectRenderer
        - Color originalFogColor
        - float originalFogDensity
        - IEnumerator DisableObjectFuc()
        + void ApplyFogFuc()
        - IEnumerator DisableFogFuc()
    }

    class Portal {
        + Transform destination
        + GameObject player
        + void ApplyPortal()
    }

    class Test {
    }
}

package "Cam" {
    class CamRot {
        + float mouseSpd
        - float mx
        - float my
    }
}

class DialogueManager {
    + GameObject playerObject
    + GameObject npcObject
    + GameObject otherUI
    + TextMeshProUGUI dialogueTextUI
    + GameObject dialoguePanel
    + TextAsset dialogueFile
    + GameObject nextAction
    - Camera[] playerCam
    - Camera playerCam_1
    - Camera playerCam_2
    - Camera npcCam
    - string playerName
    - string npcName
    - List<string> dialogueLines
    - int currentLineIndex
    - bool isDialogueActive
    - bool isInitialized
    - IDialogueAction dialogueEndAction
    + void StartDialogue()
    - void Initialize()
    - void ParseDialogueFile()
    - void ShowNextLine()
    - void EndDialogue()
    - bool ValidateComponents()
    - void SwitchCamera(string speaker)
}

interface IDialogueAction {
    void Apply()
}

class SceneSwitch {
    + string sceneName
}

class SpawnTimer {
    + float spawnTime
    + float curTime
    + GameObject spawnObj
}

' Dependencies
NPCInteraction --> Dialogue
Timer --> GameOverScript
DialogueTrigger --> DialogueManager
DialogueManager --> IDialogueAction
PlayerReset --> SimpleMove
ItemInteraction --> ItemTrigger
ItemTrigger --> FogTrigger
ItemTrigger --> PanelHiding
ItemTrigger --> DogMoveScript
ItemTrigger --> Portal
SimpleMove --> Portal
DogMoveScript --> PlayerReset
FogTrigger --> PlayerReset
ItemInteraction --> PlayerReset
DialogueTrigger --> PlayerReset
SceneSwitch --> PlayerReset
GameOverScript --> SceneSwitch
Title --> SceneSwitch
NPCInteraction --> SceneSwitch
